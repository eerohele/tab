name: Clojure CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest]
        java-version: ['11', '17', '21']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: DeLaGuardo/setup-clojure@12.1
        with:
          cli: '1.11.1.1208'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: deps-${{ hashFiles('deps.edn') }}
          restore-keys: deps-

      - uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ hashFiles('deps.edn') }}

      - run: clojure -X:dev user/check! '{:path "test"}'
        id: test

      - run: clojure -A:dev -X cognitect.test-runner.api/test

      - run: mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install-deps"

      - run: clojure -J-Dtab.e2e.browser=webkit -X:dev user/check! '{:path "spec"}'
        if: matrix.os != 'ubuntu-latest'

      - run: clojure -J-Dtab.e2e.browser=firefox -X:dev user/check! '{:path "spec"}'
      - run: clojure -J-Dtab.e2e.browser=chromium -X:dev user/check! '{:path "spec"}'

      - uses: actions/upload-artifact@v4
        if: failure() && steps.test.outcome == 'failure'
        with:
          path: ./target/results/
          retention-days: 2
